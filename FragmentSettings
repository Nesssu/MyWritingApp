package com.example.mywritngapp;

import android.app.Activity;
import android.content.Context;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.SpinnerAdapter;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.fragment.app.Fragment;

import java.util.Locale;
import java.util.Objects;

public class FragmentSettings extends Fragment {
    private FragmentBListener listener;
    private EditText editTextFont;
    private EditText editTextWidth;
    private EditText editTextHeight;
    private EditText editTextLines;
    private EditText editTextDisplay;
    private final DataHolder dataHolder = DataHolder.getInstance();

    public interface FragmentBListener {
        void changeInputType(boolean choice);
    }

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View v = inflater.inflate(R.layout.fragment_settings, container, false);
        SwitchCompat switch1 = v.findViewById(R.id.switch1);
        editTextFont = v.findViewById(R.id.editTextFont);
        editTextHeight = v.findViewById(R.id.editTextHeight);
        editTextWidth = v.findViewById(R.id.editTextWidth);
        editTextLines = v.findViewById(R.id.editTextLines);
        editTextDisplay = v.findViewById(R.id.editTextDisplay);
        Spinner spinner = v.findViewById(R.id.spinner);
        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(Objects.requireNonNull(getActivity()).getBaseContext(), R.array.Languages, android.R.layout.simple_spinner_item);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        spinner.setAdapter(adapter);
        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                String selected = parent.getItemAtPosition(position).toString();
                dataHolder.setLanguage(selected);
            }
            @Override
            public void onNothingSelected(AdapterView<?> parent) {
            }
        });
        switch1.setChecked(dataHolder.getChoice());
        switch1.setOnCheckedChangeListener((buttonView, isChecked) -> {
            listener.changeInputType(isChecked);
            dataHolder.setChoice(isChecked);
        });
        return v;
    }
    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        editTextLines.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if (!editTextLines.getText().toString().equals("")) {
                    int converted1 = Integer.parseInt(editTextLines.getText().toString());
                    dataHolder.setLines(converted1); } }
            @Override
            public void afterTextChanged(Editable s) {}
        });
        editTextFont.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if (!editTextFont.getText().toString().equals("")) {
                    int converted2 = Integer.parseInt(editTextFont.getText().toString());
                    dataHolder.setFontSize(converted2); } }
            @Override
            public void afterTextChanged(Editable s) {}
        });
        editTextWidth.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if (!editTextWidth.getText().toString().equals("")) {
                    int converted3 = Integer.parseInt(editTextWidth.getText().toString());
                    dataHolder.setWidth(converted3); } }
            @Override
            public void afterTextChanged(Editable s) {}
        });
        editTextHeight.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if (!editTextHeight.getText().toString().equals("")) {
                    int converted4 = Integer.parseInt(editTextHeight.getText().toString());
                    dataHolder.setHeight(converted4); } }
            @Override
            public void afterTextChanged(Editable s) {}
        });
        editTextDisplay.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                String display = editTextDisplay.getText().toString();
                dataHolder.setDisplayText(display); }
            @Override
            public void afterTextChanged(Editable s) {}
        });
    }
    @Override
    public void onAttach(@NonNull Context context) {
        super.onAttach(context);
        if (context instanceof FragmentBListener) {
            listener = (FragmentBListener) context;
        }
    }
    @Override
    public void onDetach() {
        super.onDetach();
        listener = null;
    }
}
